https://help.github.com/articles/using-pull-requests
https://help.github.com/articles/using-pull-requests


Usual Process
	Get the master code
		$ git checkout master
	Create a Branch
		$ git checkout -b BRANCH_NAME //Always write code in a branch so you can commit your code without screwing up the master.
	Commiting
		$ git add .
		$ git commit -a -m "Comment"
	Merging the code
		Go to master
			$ git checkout master
		Merge the code with master
		$ git merge BRANCH_NAME

Good UI Tool for GitHub
	http://mac.github.com/help.html



To create the config in your machine
	$ git config --global user.name "Your Name Comes Here"
	$ git config --global user.email you@yourdomain.example.com
	$ git init
	OR 
	$ git clone https://github.com/romalopes/APPLICATION_NAME.git  //When the project already exists

Adding files
		$ git add .
	OR
		$ git add file1 file2 file3


Commit to your local repository
	$ git commit -m "Initial commit"


Add a Different Repository, example, you can hava code refering to GitHub and Heroku.
	$ git remote add origin https://github.com/romalopes/APPLICATION_NAME.git
		origin is a name of a remote repository(or branch) to be pushed in master

	$ git remote -v  //To see if this remove repository was created

To show branches and changes
	$git status

Before push pull from master
	$ git pull origin master  //Before push you should give a pull to ensure the your master is equals to origin

Push
$ git push -u origin master
	
	.gitignore contains all file and directories that should be ignored

With a Branch
	Creating a branch and swith to it
		$ git checkout -b BRANCH_NAME   //switch to a new branch

		Ex
			$ git add src/test/com/roma/MethodTest.groovy
			OR
			$ git commit -m "Added tests for new one functionality"
	Push in origin
	$ git push origin BRANCH_NAME 

	- go to github.commit
		- see if the branched was pulled
		- click in Pull Request		


- Most important GitHub Commands
	git init
	Create a .gitignore file in include all files and directories that you don't want to commit
	git add . //add all files to local git
	git status -a / show all files that are modified or added
	git remote add origin git@github.com:USER/REPO.git
	git push -u origin master
	# Remove or Delete remote
	git remote rm destination
	# Rename app
	heroku apps:rename romamoneygrails


Using GitHub with Heroku
	$ heroku apps:create Name
	$ git add .
	$ git commit -a -m "heroku"
	$ git push heroku
	$ heroku pg:reset DATABASE
	$ heroku run rake db:migrate
	$ heroku run rake db:populate
	$ heroku restart
	$ heroku open

Usual Process
	Get the master code
		$ git checkout master
	Create a Branch
		$ git checkout -b BRANCH_NAME //Always write code in a branch
	Commiting
		$ git add .
		$ git commit -m "include-users"
	Merging the code
		Go to master
			$ git checkout master
		Merge the code with master
		$ git merge BRANCH_NAME
